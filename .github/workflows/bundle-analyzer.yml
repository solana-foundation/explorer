name: Bundle Analysis 

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  PW_CACHE_AFFIX: pw
  PW_CACHE_FOLDER: ~/.cache/ms-playwright

permissions:
  contents: read
  pull-requests: write

jobs:
  Bundle-Analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install package manager
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.6

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Setup pnpm config
        run: pnpm config set store-dir $PW_CACHE_FOLDER

      - name: Setup Cache
        uses: actions/cache@v4
        id: pnpm_store_cache
        with:
          path: |
            ${{ env.PW_CACHE_FOLDER }}
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-${{ env.PW_CACHE_AFFIX }}-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/.browserslistrc') }}-${{ hashFiles('**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.PW_CACHE_AFFIX }}-
            ${{ runner.os }}-${{ env.PW_CACHE_AFFIX }}-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: ANALYZE=true pnpm build

      - name: Build manifest file
        run: pnpm run build-manifest

      - name: Analyze bundle sizes
        uses: transferwise/actions-next-bundle-analyzer@v2
        with:
          comment-strategy: 'always'
          github-token: ${{ secrets.GITHUB_TOKEN }} #

      - name: Reset manifest file
        run: pnpm run reset-manifest

      - name: Upload dependency graph
        uses: actions/upload-artifact@v4
        with:
          name: dg
          path: .next/analyze/client.html
