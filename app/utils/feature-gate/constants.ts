import { FeatureInfoType } from './types';

export const FEATURES: FeatureInfoType[] = [
    {
        description: 'Two new instructions for moving value between stake accounts without holding Withdrawer',
        devnetActivationEpoch: 798,
        key: '7bTK6Jis8Xpfrs8ZoUfiMDPazTcdPcTWheZFJTA5Z6X4',
        mainnetActivationEpoch: 727,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0148-stake-program-move-instructions.md',
            number: 148,
        },
        testnetActivationEpoch: 712,
        title: 'MoveStake and MoveLamports',
    },
    {
        description: 'Enable confidential token transfers',
        devnetActivationEpoch: 801,
        key: 'zkhiy5oLowR7HY4zogXjCjeMXyruLqBwSWH21qcFtnv',
        mainnetActivationEpoch: 731,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0153-elgamal-proof-program.md',
            number: 153,
        },
        testnetActivationEpoch: 714,
        title: 'Enable ZK ElGamal Proof program',
    },
    {
        description: 'Passes on 100% of priority fee to validators',
        devnetActivationEpoch: 805,
        key: '3opE3EzAKnUftUDURkzMgwpNgimBAypW1mNDYH4x4Zg7',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0096-reward-collected-priority-fee-in-entirety.md',
            number: 96,
        },
        testnetActivationEpoch: 716,
        title: 'Reward full priority fee to validators',
    },
    {
        description: 'Simplify account loading',
        devnetActivationEpoch: 800,
        key: 'EQUMpNFr7Nacb1sva56xn1aLfBxppEoSBH8RRVdkcD1x',
        mainnetActivationEpoch: 728,
        simd: null,
        testnetActivationEpoch: 713,
        title: 'Disable account loader special case',
    },
    {
        description: 'Removing legacy floating number arithmetic operation in fee calculation, make it integer-based',
        devnetActivationEpoch: 802,
        key: 'BtVN7YjDzNE6Dk7kTT7YTDgMNUZTNgiSJgsdzAeTg2jF',
        mainnetActivationEpoch: null,
        simd: null,
        testnetActivationEpoch: 715,
        title: 'Removing unwanted rounding in fee calculation',
    },
    {
        description:
            'Unified syscall interface for all sysvars, without needing to include sysvar address in transactions',
        devnetActivationEpoch: 806,
        key: 'CLCoTADvV64PSrnR6QXty6Fwrt9Xc6EdxSJE4wLRePjq',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0127-get-sysvar-syscall.md',
            number: 127,
        },
        testnetActivationEpoch: 717,
        title: 'Enable sol_get_sysvar',
    },
    {
        description: 'Enable new voting instruction',
        devnetActivationEpoch: 813,
        key: 'tSynMCspg4xFiCj1v3TDb4c7crMR5tSBhLz4sF7rrNA',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0138-deprecate-legacy-vote-instructions.md',
            number: 138,
        },
        testnetActivationEpoch: 718,
        title: 'Add TowerSync instruction',
    },
    {
        description: 'Turn feature gate syscall into a BPF program, enabling revocation of pending features.',
        devnetActivationEpoch: 816,
        key: '4eohviozzEeivk1y9UbrnekbAFMDQyJz5JjA9Y6gyvky',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0089-programify-feature-gate-program.md',
            number: 89,
        },
        testnetActivationEpoch: 719,
        title: 'Programify Feature Gate',
    },
    {
        description: 'Migrate the config program to a BPF program',
        devnetActivationEpoch: 817,
        key: '2Fr57nzzkLYXW695UdDxDeR5fhnZWSttZeZYemrnpGFV',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0140-migrate-config-to-core-bpf.md',
            number: 140,
        },
        testnetActivationEpoch: 720,
        title: 'Migrate config program to Core BPF',
    },
    {
        description: 'Allow core developers to exclude system programs from write-locking transactions',
        devnetActivationEpoch: 820,
        key: '8U4skmMVnF6k2kMvrWbQuRUT3qQSiTYpSjqmhmgfthZu',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0105-dynamic-reserved-accounts-set.md',
            number: 105,
        },
        testnetActivationEpoch: 722,
        title: 'Add new unwritable reserved accounts',
    },
    {
        description: 'Improve performance of validator performance at epoch boundary by skipping rent collection',
        devnetActivationEpoch: null,
        key: 'CGB2jM8pwZkeeiXQ66kBMyBR6Np61mggL7XUsmLjVcrw',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0183-skip-rent-rewrites.md',
            number: 183,
        },
        testnetActivationEpoch: 733,
        title: 'Skip rent writes',
    },
    {
        description: 'Disables rent collection for accounts, to be activated when all rent-paying accounts are gone',
        devnetActivationEpoch: null,
        key: 'CJzY83ggJHqPGDq8VisV3U91jDJLuEaALZooBrXtnnLU',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0084-disable-rent-fees-collection.md',
            number: 84,
        },
        testnetActivationEpoch: 734,
        title: 'Disable rent fees collection',
    },
    {
        description: 'Enable on-chain verification of Passkeys and the WebAuthn Standard (secp256r1) signatures',
        devnetActivationEpoch: null,
        key: 'sr11RdZWgbHTHxSroPALe6zgaT5A1K9LcE4nfsZS4gi',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0075-precompile-for-secp256r1-sigverify.md',
            number: 75,
        },
        testnetActivationEpoch: null,
        title: 'Enable secp256r1 precompile',
    },
    {
        description: 'Migrate the Address Lookup Table to a BPF program',
        devnetActivationEpoch: null,
        key: 'C97eKZygrkU4JxJsZdjgbUY7iQR7rKTr4NyDWo2E5pRm',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0128-migrate-address-lookup-table-to-core-bpf.md',
            number: 128,
        },
        testnetActivationEpoch: null,
        title: 'Address Lookup Table to Core BPF',
    },
    {
        description: 'Add a new syscall to get the epoch stake',
        devnetActivationEpoch: null,
        key: 'FKe75t4LXxGaQnVHdUKM6DSFifVVraGZ8LyNo7oPwy1Z',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0133-syscall-get-epoch-stake.md',
            number: 133,
        },
        testnetActivationEpoch: null,
        title: 'GetEpochStake',
    },
    {
        description:
            'Removes pitfalls and foot-guns from the virtual machine and syscalls by enabling account data direct mapping',
        devnetActivationEpoch: null,
        key: 'GJVDwRkUPNdk9QaK4VsU4g1N41QNxhy1hevjf8kz45Mq',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/pull/219',
            number: 219,
        },
        testnetActivationEpoch: null,
        title: 'Stricter VM verification constraints',
    },
    {
        description: 'Only vote for blocks with sufficiently sized fec sets',
        devnetActivationEpoch: null,
        key: 'ffecLRhhakKSGhMuc6Fz2Lnfq4uT9q3iu9ZsNaPLxPc',
        mainnetActivationEpoch: null,
        simd: null,
        testnetActivationEpoch: null,
        title: 'Vote only on full fec sets',
    },
    {
        description: 'Faster homomorphic hashing of accounts, enabling account state to be hashed in every block',
        devnetActivationEpoch: null,
        key: 'LtHaSHHsUge7EWTPVrmpuexKz6uVHZXZL6cgJa7W7Zn',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0215-accounts-lattice-hash.md',
            number: 215,
        },
        testnetActivationEpoch: null,
        title: 'Accounts Lattice Hash',
    },
    {
        description: '',
        devnetActivationEpoch: null,
        key: '2ry7ygxiYURULZCrypHhveanvP5tzZ4toRwVp89oCNSj',
        mainnetActivationEpoch: null,
        simd: null,
        testnetActivationEpoch: null,
        title: 'Validator applies cost tracker to blocks during replay',
    },
    {
        description: '',
        devnetActivationEpoch: null,
        key: 'LTsNAP8h1voEVVToMNBNqoiNQex4aqfUrbFhRH3mSQ2',
        mainnetActivationEpoch: null,
        simd: {
            link: 'https://github.com/solana-foundation/solana-improvement-documents/blob/main/proposals/0220-snapshots-use-accounts-lattice-hash.md',
            number: 220,
        },
        testnetActivationEpoch: null,
        title: 'Snapshots use Accounts Lt Hash',
    },
];
